#: import AKCircularProgress akivymd.uix.progresswidget
#include force Power_App_KVs/meter_reading_details.kv
# import AKBadgeLayout akivymd.uix.akbadgelayout
<Meter_reading_screen>:
    MDBoxLayout:
        size_hint_y: 0.94
        orientation: "vertical"
        MDCard:
            size_hint: 1, 0.16
            orientation: "vertical"
            padding: "5dp"

            # first segment that has the SU and BU name
            MDGridLayout:
                cols: 2
                size_hint: 1, .06
                MDLabel:
                    id: read_cycle
                    text: "Sept Cycle"
                    font_size: "10dp"
                    halign: "left"
                MDLabel:
                    id: BU
                    #size_hint: .3,1
                    text: ""#str(app.items[0])
                    font_size: "10dp"
                    halign: "right"
                    canvas:
                     #   Color:
                      #      rgba: app.theme_cls.primary_color
                       # Rectangle:
                        #    pos: int(self.parent.pos[0]+12), self.parent.pos[1]
                         #   size: int(self.parent.size[0]-24), self.parent.size[1]

            # second segment that have search bar and progress widget
            MDGridLayout:
                id: searchgrid
                cols: 2
                size_hint: 1, .1
                AnchorLayout:
                    pos_hint: searchgrid.pos
				    size_hint_x: .8
				    size_hint_y: .1
				    anchor_x: "right"
				    padding: "4dp"
                    TextInput:
                        id: meter_dss_selector
                        padding: ["1dp","4dp"]
                        pos_hint: None, None
                        x: self.parent.x
                        y: self.parent.y
                        size_hint_x: 1
                        size_hint_y: .8
                        text: ""
                        font_size: "10dp"
                        multiline: False
                        on_text: app.transformer_selector_1(self.text), root.clear_label()
                        on_text: meter_dss_selector.border = (0, 4, 4, 4)
                        MDLabel:
                            id: faker0
                            padding: ["12dp","12dp"]
                            pos_hint: meter_dss_selector.x, meter_dss_selector.y
                            size_hint: None, None
                            size: meter_dss_selector.width, meter_dss_selector.height
                            text: ""
                            font_size: "9dp"
                            on_touch_down: app.transformer_selector_1(meter_dss_selector.text)

                        #, reading_progress_percent.current_percent = len(self.text)#self.text)
                    MDLabel:
                        id: faker1
                        padding: ["12dp","12dp"]
                        pos_hint: meter_dss_selector.x, meter_dss_selector.y
                        size_hint: None, None
                        size: meter_dss_selector.width, meter_dss_selector.height
                        text: "Enter DSS to filter"
                        font_size: "9dp"

                    MDGridLayout:
                        id: grider1
                        cols: 2
                        size_hint: None, None
                        width: meter_dss_selector.width/4
                        height: meter_dss_selector.height
                        pos_hint: None, 1
                        anchor_x: "right"
                        pos: meter_dss_selector.x+(meter_dss_selector.width/3)+(meter_dss_selector.width/3), meter_dss_selector.y
                        #padding: "4dp"
                        #x:meter_dss_selector.x
                        #y:meter_dss_selector.y
                        #canvas.before:
                         #   Rectangle:
                          #      pos: grider1.pos
                           #     size: grider1.size
                            #Color:
                             #   rgba: 0,0,1,1

                        MDFlatButton:
                            id: filter_button
                            size_hint: .6, 1
                            text: "Load All"
                            md_bg_color: app.theme_cls.primary_dark
                            font_size: "10dp"
                            #on_press: app.meter_reading_clear_items()
                            on_release: app.meter_reading_menu_items()
                        #MDCheckbox:
                         #   id: check_all
                          #  size_hint: .3, 1
                           # on_active: app.nothing()
                            #height: "24dp"

                MDBoxLayout:
                    id: progress_bar_main_layout
                    size_hint_x: 0.2
                    AKCircularProgress:
                        id: meter_read_progress
                        pos_hint: {"center_x": .5, "center_y": .5}
                        size_hint: (None, None)
                        size: ('40dp', '40dp')
                        line_width: '2dp'
                        percent_type: "relative"
                        percent_size: '7dp'
                        start_deg: 180
                        end_deg: 540
                        max_percent: 1
                        #current_percent: 0

        Screen:
            ScrollView:
                on_touch_down: dss_scrollview.clear_widgets()
                #on_touch_down: self.dss_checkbox_filter = []
                #on_touch_down: app.dss_search_text_state = "Load All"
                do_scroll_y: True
                MDGridLayout:
                    id: meter_read_grid
                    md_bg_color: [.7]+app.theme_cls.primary_light[1:3]+[.4]
                    padding: 3
                    spacing: 5
                    size_hint: 1,None
                    height: app.widget_sizer(id="meter_to_read_height", parent_height=self.parent.height, child_number=len(self.children))
                    cols: 1
                    #the upload function should work in a way that will change the color of the meters to read
                    #to white when read but should be at yellow before read, it should also change the color to green if the upload is successful
                    #Meters_to_read:
                    # this is the section that contains all the added meters to read

            MDFloatLayout:
                id: bottom_tab
                md_bg_color: [.6]+app.theme_cls.primary_light[1:3]+[0]
                size_hint: 1, .1
                spacing: 5
                padding: 5
                MDFloatLayout:
                    id: dss_scrollview
                    pos: meter_dss_selector.x, meter_dss_selector.y
                    size_hint: None, None
                    width: meter_dss_selector.width


                MDBoxLayout:
                    orientation: "horizontal"
                    padding:[5,5] if root.width < root.height else [15,15]
                    spacing: 5 if root.width < root.height else 15
                    Button:
                        text: "Upload All"
                        font_size: "9dp"
                        icon: "upload-multiple"
                        pos_hint: {"bottom":1, "left": .5}
                        #size_hint_x: .2
                        size_hint: .3, 1
                        background_color: app.theme_cls.primary_dark

                    Button:
                        pos_hint: {"center_x": .5}
                        font_size: "9dp"
                        text: "Manual Input"
                        icon: "animation"
                        on_release: app.change_screen('Meter reading page',step=2)
                        size_hint: .3,1
                        size: 70, 30
                        background_color: app.theme_cls.primary_dark

                    Button:
                        pos_hint: {"center_x": .5}
                        font_size: "9dp"
                        text: "Show all read"
                        icon: "animation"
                        on_release: app.manual_meter_reading()#, print(app.theme_cls.primary_light)
                        #size_hint_x: .2
                        size_hint: .3,1
                        background_color: app.theme_cls.primary_dark

                    TextInput:
                        id: x_coordinate
                        size_hint: .2,.8
                        on_text: app.meter_proximity_calc((x_coordinate.text), (y_coordinate.text))
                    TextInput:
                        id: y_coordinate
                        size_hint: .2,.8
